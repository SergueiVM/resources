!define BASEPATH https://raw.githubusercontent.com/SergueiVM/resources/master

!include https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Component.puml
!include https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Deployment.puml
!include https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Sequence.puml
!include BASEPATH/plantuml/sprites/sprites.iuml
!include BASEPATH/plantuml/c4-common.iuml
!include BASEPATH/plantuml/c4-tags.iuml

hide footbox

' Rewrite deployment Nodes as Boundaries
' Boundary($alias, $label, $type="", $tags="", $link="", $descr = "")

!unquoted procedure Deployment_Node($alias, $label, $type="Node", $descr="", $sprite="", $tags="", $link="")
Boundary($alias, $label, $type, $tags, $link, $descr)
!endprocedure

!unquoted procedure Deployment_Node_L($alias, $label, $type="Node", $descr="", $sprite="", $tags="", $link="")
Boundary($alias, $label, $type, $tags, $link, $descr)
!endprocedure

!unquoted procedure Deployment_Node_R($alias, $label, $type="Node", $descr="", $sprite="", $tags="", $link="")
Boundary($alias, $label, $type, $tags, $link, $descr)
!endprocedure

!unquoted procedure Node($alias, $label, $type="Node", $descr="", $sprite="", $tags="", $link="")
Boundary($alias, $label, $type, $tags, $link, $descr)
!endprocedure

!unquoted procedure Node_L($alias, $label, $type="Node", $descr="", $sprite="", $tags="", $link="")
Boundary($alias, $label, $type, $tags, $link, $descr)
!endprocedure

!unquoted procedure Node_R($alias, $label, $type="Node", $descr="", $sprite="", $tags="", $link="")
Boundary($alias, $label, $type, $tags, $link, $descr)
!endprocedure

'Rel sequence rewrite to activate and deactivate componentes
!unquoted procedure Resp($from, $to, $label, $techn="", $descr="", $sprite="", $tags="", $link="", $index="", $rel="")
  !if ($show_index == %true())
    !$pre = $getPrefix($index)
  !else
    !$pre = ""
  !endif
  !if ($rel == "")
    !$rel = "<--"
  !endif
$getRel($rel, $from, $to, $pre + $label, $techn, $descr, $sprite, $tags, $link)
deactivate $to
!endprocedure

!unquoted procedure Resp($from, $to, $label, $techn="", $descr="", $sprite="", $tags="", $link="")
Resp($from, $to, $label, $techn, $descr, $sprite, $tags, $link, "", "")
!endprocedure

!unquoted function $Activate($elem)
  !return 'activate ' + $elem
!endfunction

!unquoted procedure Rel($from, $to, $label, $techn="", $descr="", $sprite="", $tags="", $link="", $index="", $rel="")
  !if ($show_index == %true())
    !$pre = $getPrefix($index)
  !else
    !$pre = ""
  !endif
  !if ($rel == "")
    !$rel = "->"
  !endif
$getRel($rel, $from, $to, $pre + $label, $techn, $descr, $sprite, $tags, $link)

!if ($from != $to)
activate $to
!endif

!endprocedure

!unquoted procedure Rel($from, $to, $label, $techn="", $descr="", $sprite="", $tags="", $link="")
Rel($from, $to, $label, $techn, $descr, $sprite, $tags, $link, "", "")
activate $to
!endprocedure

!unquoted procedure Activate($obj)
activate $obj
!endprocedure

!unquoted procedure Deactivate($obj)
deactivate $obj
!endprocedure

!unquoted procedure TimeBreak()
...
!endprocedure

!unquoted procedure Alt($txt)
alt $txt
!endprocedure

!unquoted procedure Else($txt)
else $txt
!endprocedure

!unquoted procedure Else()
else
!endprocedure

!unquoted procedure End()
end
!endprocedure